Организовать хранение коллекции в реляционной СУБД (PostgresQL). Убрать хранение коллекции в файле. +
Для генерации поля id использовать средства базы данных (sequence). +
Все команды получения данных должны работать с коллекцией в памяти, а не в БД +
Организовать возможность регистрации и авторизации пользователей. У пользователя есть возможность указать пароль. +
Пароли при хранении хэшировать алгоритмом SHA-384 +
При хранении объектов сохранять информацию о пользователе, который создал этот объект. +
Обновлять состояние коллекции в памяти только при успешном добавлении объекта в БД +
Пользователи должны иметь возможность просмотра всех объектов коллекции, но модифицировать могут только принадлежащие им. +
Запретить выполнение команд не авторизованным пользователям. +
Для идентификации пользователя отправлять логин и пароль с каждым запросом. (адекватно - залогинился, значит работаешь с этой учеткой) +

-----------------------------------------------------------


Необходимо реализовать многопоточную обработку запросов.

Для многопоточного чтения запросов использовать ForkJoinPool
Для многопотчной обработки полученного запроса использовать Fixed thread pool
Для многопоточной отправки ответа использовать создание нового потока (java.lang.Thread)
Для синхронизации доступа к коллекции использовать потокобезопасные аналоги коллекции из java.util.concurrent

